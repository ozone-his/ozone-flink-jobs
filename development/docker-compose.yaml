version: '3.8'
services:
  kafka:
    restart: on-failure
    image: debezium/kafka:${DEBEZIUM_VERSION}
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      - CLUSTER_ID=5Yr1SIgYQz-b-dgRabWx4g
      - BROKER_ID=1
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      # - CREATE_TOPICS=${CREATE_TOPICS}
      - KAFKA_LISTENERS=PLAINTEXT://kafka:9092,CONTROLLER://kafka:9093,PLAINTEXT_HOST://0.0.0.0:29092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
    volumes:
      - kafka-data:/kafka/data
    depends_on:
      - mysql
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "/bin/bash",
          "-c",
          "./bin/kafka-topics.sh --bootstrap-server 127.0.0.1:9092 --list"
        ]
  connect:
    restart: on-failure
    image: debezium/connect:${DEBEZIUM_VERSION}
    ports:
      - 8083:8083
    depends_on:
      - mysql
    volumes:
      - ./debezium-connect/jars/TimestampConverter-1.2.4-SNAPSHOT.jar:/kafka/connect/debezium-connector-mysql/TimestampConverter-1.2.4-SNAPSHOT.jar
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses
      - CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE=false
      - CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE=false
      - CONNECT_CONFIG_PROVIDERS=file
      - CONNECT_CONFIG_PROVIDERS_FILE_CLASS=org.apache.kafka.common.config.provider.FileConfigProvider
      - CONNECT_MYSQL_HOSTNAME=${CONNECT_MYSQL_HOSTNAME:-mysql}
      - CONNECT_MYSQL_USERNAME=${CONNECT_MYSQL_USERNAME:-root}
      - CONNECT_MYSQL_PASSWORD=${CONNECT_MYSQL_PASSWORD:-${MYSQL_ROOT_PASSWORD}}
      - CONNECT_MYSQL_PORT=${CONNECT_MYSQL_PORT:-${CONNECT_MYSQL_PORT}}
      - CONNECT_MYSQL_SERVER_ID=2
      - CONNECT_MYSQL_SERVER_NAME=openmrs
      - CONNECT_MYSQL_INCLUDE_LIST=openmrs
      - CONNECT_TABLE_EXCLUDE_LIST=openmrs.audit_log
      - CONNECT_MYSQL_HISTROY_TOPIC=dbhistory.openmrs
      - CONNECT_MYSQL_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - CONNECT_ODOO_DB_HOSTNAME=${CONNECT_ODOO_DB_HOSTNAME:-postgresql}
      - CONNECT_ODOO_DB_USERNAME=${CONNECT_ODOO_DB_USERNAME:-${POSTGRES_USER}}
      - CONNECT_ODOO_DB_PASSWORD=${CONNECT_ODOO_DB_PASSWORD:-${POSTGRES_PASSWORD}}
      - CONNECT_ODOO_DB_PORT=${CONNECT_ODOO_DB_PORT:-5432}
      - CONNECT_ODOO_DB_SERVER_NAME=odoo
      - CONNECT_ODOO_DB_INCLUDE_LIST=odoo

  connect-setup:
    restart: on-failure
    build: ./setup-connect
    depends_on:
      - postgresql
      - mysql
      - connect
    environment:
      - CONNECT_HOST=connect
      - ANALYTICS_DB_HOST=${ANALYTICS_DB_HOST}
      - SOURCE_DB_HOST=${CONNECT_MYSQL_HOSTNAME}
      - ODOO_DB_HOST=${ODOO_DB_HOST:-${CONNECT_ODOO_DB_HOSTNAME}}
      - ODOO_DB_PORT=${ODOO_DB_PORT:-${CONNECT_ODOO_DB_PORT}}
      - FLINK_JOBMANAGER_HOST=jobmanager
  kowl:
    image: rsmnarts/kowl
    container_name: "kowl"
    restart: on-failure
    entrypoint: /bin/sh
    command: -c "echo \"$$KOWL_CONFIG_FILE\" > /tmp/config.yml; /app/kowl"
    ports:
      - "8282:8080"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      KOWL_CONFIG_FILE: |
        kafka:
          brokers: ["kafka:9092"]
        connect:
          enabled: true
          clusters:
            - name: Ozone
              url: http://connect:8083
    depends_on:
      - "kafka"
      - "connect"

  mysql:
    restart: on-failure
    image: mariadb:10.3
    command: "mysqld --character-set-server=utf8 --collation-server=utf8_general_ci --log-bin --binlog-format=ROW  --server-id=0 --max_connections=1024"
    environment:
      MYSQL_DATABASE: ${MYSQL_DB:-openmrs}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-Admin123}
      MYSQL_USER: ${MYSQL_USER:-openmrs}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-Admin123}
    ports:
      - "3306:3306"
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
    volumes:
      - ${MYSQL_DATADIR:-mysql-data}:/var/lib/mysql:rw
      - ./data/openmrs-data/openmrs.sql:/docker-entrypoint-initdb.d/openmrs.sql
  postgresql:
    restart: on-failure
    image: postgres:13
    command: postgres -c wal_level=logical -c max_wal_senders=10 -c max_replication_slots=10
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_DB: odoo
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      # Analystics
      ANALYTICS_DB_NAME: ${ANALYTICS_DB_NAME}
      ANALYTICS_DB_USER: ${ANALYTICS_DB_USER}
      ANALYTICS_DB_PASSWORD: ${ANALYTICS_DB_PASSWORD}
    volumes:
      - ${POSTGRES_DATADIR:-postgresql-data}:/var/lib/postgresql/data
      - "${SQL_SCRIPTS_PATH:-./sqls}/postgresql:/docker-entrypoint-initdb.d"
    ports:
      - "5432:5432"
  liquibase:
    image: liquibase/liquibase
    restart: on-failure
    volumes:
      - ./liquibase/db/changeLog/:/liquibase/changelog/
    command: update --username=${ANALYTICS_DB_NAME} --password=${ANALYTICS_DB_PASSWORD} --changeLogFile=${CHANGELOG_FILE} --url=jdbc:postgresql://postgresql:5432/

    environment:
      INSTALL_POSTGRESQL: 'true'
    depends_on:
      - postgresql

volumes:
  mysql-data:
  postgresql-data: ~
  kafka-data: ~
